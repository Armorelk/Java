import java.util.ArrayList;
import java.util.Comparator;

class Student {
    private String name;
    private int rollNo;
    private String address;

    // constructor
    public Student(String name, int rollNo, String address) {
        this.name = name;
        this.rollNo = rollNo;
        this.address = address;
    }

    // getters and setters
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getRollNo() {
        return rollNo;
    }

    public void setRollNo(int rollNo) {
        this.rollNo = rollNo;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    @Override
    public String toString() {
        return "Name: " + name + ", Roll number: " + rollNo + ", Address: " + address;
    }
}

class SortByName implements Comparator<Student> {
    @Override
    public int compare(Student student1, Student student2) {
        // using the string compareTo method to sort the students according to their
        // name
        return student1.getName().compareTo(student2.getName());
    }
}

class SortByRollNo implements Comparator<Student> {
    @Override
    public int compare(Student student1, Student student2) {
        // sorting by roll number in ascending order
        if (student1.getRollNo() < student2.getRollNo())
            return -1;
        else if (student1.getRollNo() > student2.getRollNo())
            return 1;
        else
            return 0;
    }
}

public class Module6 {
    public static void main(String[] args) {
        ArrayList<Student> students = new ArrayList<>();
        // populating 10 students
        students.add(new Student("Tom", 13, "USA"));
        students.add(new Student("Dick", 85, "USA"));
        students.add(new Student("Harry", 16, "USA"));
        students.add(new Student("Betty", 77, "USA"));
        students.add(new Student("Darla", 22, "USA"));
        students.add(new Student("Britani", 27, "USA"));
        students.add(new Student("Trey", 3, "USA"));
        students.add(new Student("Desmond", 24, "USA"));
        students.add(new Student("Lincoln", 55, "USA"));
        students.add(new Student("Lilah", 67, "USA"));
        // calling the sort method
        SortByName(students);
        System.out.println("Students sorted by name: ");
        for (Student student : students) {
            System.out.println(student);
        }
        // calling the sort method
        SortByRollNo(students);
        System.out.println("\nStudents sorted by roll numbers: ");
        for (Student student : students) {
            System.out.println(student);
        }
    }

    public static void SortByName(ArrayList<Student> students) {
        SortByName sortByName = new SortByName();
        for (int i = 0; i < students.size(); i++) {
            int minIndex = i;
            for (int j = i; j < students.size(); j++) {
                // if the element at j is less than element at minIndex then update the minIndex
                if (sortByName.compare(students.get(j), students.get(minIndex)) < 0) {
                    minIndex = j;
                }
            }
            Student temp = students.get(i);
            // setting the element at minIndex to index i
            students.set(i, students.get(minIndex));
            // setting the minIndex by the temp element
            students.set(minIndex, temp);
        }
    }

    public static void SortByRollNo(ArrayList<Student> students) {
        SortByRollNo sortByRollNo = new SortByRollNo();
        for (int i = 0; i < students.size(); i++) {
            int minIndex = i;
            for (int j = i; j < students.size(); j++) {
                // if the element at j is less than element at minIndex then update the minIndex
                if (sortByRollNo.compare(students.get(j), students.get(minIndex)) < 0) {
                    minIndex = j;
                }
            }
            Student temp = students.get(i);
            // setting the element at minIndex to index i
            students.set(i, students.get(minIndex));
            // setting the minIndex by the temp element
            students.set(minIndex, temp);
        }
    }
}
